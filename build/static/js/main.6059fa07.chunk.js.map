{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/Fish.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","action","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","CSSTransition","TransitionGroup","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","Fish","details","image","desc","src","alt","disabled","addToOrder","index","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","updateFish","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.6059fa07.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from '../helpers';\n\nclass StorePicker extends React.Component {\n    myInput = React.createRef();\n    static propTypes = {\n        history: PropTypes.object\n    }\n\n    goToStore = (event) => {\n        // 1. Stop the form from submitting\n        event.preventDefault();\n        // 2. Get the text from that input\n        const storeName = this.myInput.current.value;\n        // 3. Change the page to /store/whatever-they-entered\n        this.props.history.push(`/store/${storeName}`);\n       \n    }\n    render(){\n        return ( \n            <form action=\"\" className=\"store-selector\" onSubmit={this.goToStore}>\n                <h2>Please Enter a Store</h2>\n                <input \n                    type=\"text\"\n                    ref={this.myInput} \n                    required \n                    placeholder='Store Name' \n                    defaultValue={getFunName()} \n                />\n                <button type='submit'>Visit Store →</button>\n            </form>\n        )\n    }\n}\n\nexport default StorePicker;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst Header = props => (\n    <header className=\"top\">\n        <h1>Catch \n            <span className=\"ofThe\">\n                <span className=\"of\">Of</span>\n                <span className=\"the\">The</span>    \n            </span> \n        Day</h1>\n    <h3 className=\"tagline\">\n        <span>{props.tagline}</span>\n    </h3>\n    </header>\n);\n\nHeader.propTypes = {\n    tagline: PropTypes.string.isRequired\n}\n\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers'\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\"\n\nclass Order extends React.Component { \n    static propTypes = {\n        fishes: PropTypes.object,\n        order: PropTypes.object,\n        removeFromOrder: PropTypes.func\n    }\n\n    renderOrder = (key) => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvailable = fish && fish.status === 'available';\n        const transitionOptions = {\n            classNames: \"order\",\n            key,\n            timeout: { enter:500, exit:500 }\n        };\n        // Make sure the fish is loaded before we continue\n        if (!fish) return null;\n        if (!isAvailable) {\n            return (\n                <CSSTransition {...transitionOptions}>\n                    <li key={key}>\n                        Sorry {fish ? fish.name : 'fish'} is no longer available.\n                    </li>\n                </CSSTransition>\n            );\n        }\n        return (\n            <CSSTransition {...transitionOptions}>\n            <li key={key}>\n                <span>\n                    <TransitionGroup component=\"span\" className=\"count\">\n                        <CSSTransition \n                            classNames=\"count\" \n                            key={count} \n                            timeout={{enter:500, exit:500}}\n                        >\n                            <span>{count}</span>\n                        </CSSTransition>\n                    </TransitionGroup>\n                    lbs {fish.name}\n                    {formatPrice(count * fish.price)}\n                    <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\n                </span>\n            </li>\n        </CSSTransition>\n        );\n    };\n    render() {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) => {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status === 'available';\n            if(isAvailable) {\n                return prevTotal + (count * fish.price);\n            }\n            return prevTotal;\n        }, 0);\n        return (\n            <div className=\"order-wrap\">\n                <h2>Order</h2>\n                <TransitionGroup component=\"ul\" className='order'>\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                <div className=\"total\">\n                    Total:\n                    <strong>{formatPrice(total)}</strong>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default Order;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\nimport { func } from 'prop-types';\nclass Fish extends React.Component { \n    static propTypes = {\n        details: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number\n        }),\n        addToOrder: PropTypes.func\n    }\n    render() {\n        const {image, name, price, desc, status} = this.props.details;\n        const isAvailable = status === 'available';\n        return (\n            <li className=\"menu-fish\">\n                <img src={image} alt={name} />\n                <h3 className=\"fish-name\">{name}\n                    <span className=\"price\">{formatPrice(price)}</span>\n                </h3>\n                <p>{desc}</p>\n                <button disabled={!isAvailable} onClick={() => this.props.addToOrder(this.props.index)}>\n                    {isAvailable ? 'Add To Cart' : 'Sold Out'}\n                </button>\n            </li>\n        )\n    }\n}\n\nexport default Fish;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends React.Component { \n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n    \n    static propTypes = {\n        addFish: PropTypes.func\n    }\n\n    createFish = (event) => {\n        // 1. stop the form from submitting\n        event.preventDefault();\n        const fish =  {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value),\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value,\n        };\n        this.props.addFish(fish);\n        //2. refresh the form \n        event.currentTarget.reset();\n    }\n    render() {\n        return (\n            <form className='fish-edit' onSubmit={this.createFish}>\n               <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder='Name'/>\n               <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder='Price'/>\n               <select name=\"status\" ref={this.statusRef}>\n                   <option value=\"available\">Fresh!</option>\n                   <option value=\"unavailable\">Sold Out!</option>\n               </select>\n               <textarea name=\"desc\" ref={this.descRef} placeholder='Desc'></textarea>\n               <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder='Image'/>\n               <button type='submit'>+ Add Fish</button>\n            </form>\n        );\n    }\n}\n\nexport default AddFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component {\n    static propTypes = {\n        fish: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number\n        }),\n        index: PropTypes.string,\n        updateFish: PropTypes.func\n    }\n\n    handleChange = (event) => {\n        console.log(event.currentTarget.value);\n        //update that fish\n        //1.take a copy of the current fish\n        const updatedFish = {\n            ...this.props.fish,\n            [event.currentTarget.name]: event.currentTarget.value\n        };\n        this.props.updateFish(this.props.index, updatedFish);\n    }\n    render() {\n        return (\n            <div className=\"fish-edit\">\n                <input \n                    type=\"text\" \n                    name=\"name\" \n                    onChange={this.handleChange} \n                    value={this.props.fish.name} />\n                <input \n                    type=\"text\" \n                    name=\"price\" \n                    onChange={this.handleChange} \n                    value={this.props.fish.price} />\n                <select \n                    name=\"status\" \n                    onChange={this.handleChange} \n                    value={this.props.fish.status}>\n                        <option value=\"available\">Fresh!</option>\n                        <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea \n                    name=\"desc\" \n                    onChange={this.handleChange} \n                    value={this.props.fish.desc}></textarea>\n                <input \n                    type=\"text\" \n                    name=\"image\" \n                    onChange={this.handleChange} \n                    value={this.props.fish.image} \n            />\n            <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\n            </div>\n        );\n    }\n}\n\nexport default EditFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = (props) => (\n    <nav>\n        <h2>Inventory Login</h2>\n        <p>Sign in to manage your store's inventory.</p>\n        <button className=\"github\" onClick={() => props.authenticate('Github')}>Log In With Github</button>\n        {/* <button className=\"twitter\" onClick={() => props.authenticate('Twitter')}>Log In With Twitter</button> */}\n        <button className=\"facebook\" onClick={() => props.authenticate('Facebook')}>Log In With Facebook</button>\n\n\n    </nav>\n);\n\nLogin.propTypes = {\n    authenticate: PropTypes.func.isRequired\n}\n\nexport default Login;","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyAfdEksYL9iOXQqmHQY78usQKL33Wo3F4s\",\n  authDomain: \"catch-of-the-day-zack-dutra.firebaseapp.com\",\n  databaseURL: \"https://catch-of-the-day-zack-dutra-default-rtdb.firebaseio.com\",\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n//This is a named export\nexport { firebaseApp };\n\n//this is a default export\nexport default base;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends React.Component { \n    static propTypes = {\n        fishes: PropTypes.object,\n        updateFish: PropTypes.func,\n        deleteFish: PropTypes.func,\n        loadSampleFishes: PropTypes.func\n    };\n\n    state = {\n        uid: null,\n        owner: null\n    };\n\n    componentDidMount(){\n        firebase.auth().onAuthStateChanged(user => {\n            if(user) {\n                this.authHandler({ user });\n            }\n        })\n    }\n\n    authHandler = async authData => {\n        //1. Look up the current store in the firebase database\n        const store = await base.fetch(this.props.storeId, { context: this });\n        console.log(store);\n        //2 Claim it if there is no owner\n        if(!store.owner){\n            //save it as our own\n            await base.post(`${this.props.storeId}/owner`, {\n                data: authData.user.uid\n            })\n        }\n        //3. Set the state of the inventory component to reflect the current user \n        this.setState({\n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        })\n        console.log(authData);\n    }\n\n    authenticate = (provider) => {\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp\n            .auth()\n            .signInWithPopup(authProvider)\n            .then(this.authHandler);\n    }\n\n    logout = async () => {\n        console.log('Logging out');\n        await firebase.auth().signOut();\n        this.setState({ uid:null });\n    }\n\n    render() {\n        const logout = <button onClick={this.logout}>Log Out!</button>\n        //1. Check if they are logged in\n        if(!this.state.uid){\n            return <Login authenticate={this.authenticate} />;\n        }\n        //2. Check if they are not the owner of the store\n        if(this.state.uid !== this.state.owner){\n            return (\n                <div>\n                    <p>Sorry! You are not the owner.</p>\n                    {logout}\n                </div>\n                );\n        }\n        //3. They must be the owner, just render the inventory\n        return (\n            <div className=\"inventory\">\n                <h2>Inventory</h2>\n                {logout}\n                {Object.keys(this.props.fishes).map(key => \n                    <EditFishForm \n                        key={key} \n                        index={key}\n                        fish={this.props.fishes[key]}\n                        updateFish={this.props.updateFish}\n                        deleteFish={this.props.deleteFish}\n                    />\n                )}\n                <AddFishForm addFish={this.props.addFish}/>\n                <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n            </div>\n        );\n    }\n}\n\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport Fish from './Fish';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport base from '../base';\n\nclass App extends React.Component {\n    state = {\n        fishes: {},\n        order: {}\n    };\n\n    static propTypes = {\n        match: PropTypes.object\n    }\n\n    componentDidMount(){\n        const { params } = this.props.match;\n        // first reinstate our loclStorage\n        const localStorageRef = localStorage.getItem(params.storeId);\n        if(localStorageRef){\n            this.setState({ order: JSON.parse(localStorageRef) })\n        }\n        console.log(localStorageRef);\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\n            context: this,\n            state: 'fishes'\n        });\n    }\n    componentDidUpdate(){\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n    }\n    componentWillUnmount(){\n        base.removeBinding(this.ref);\n    }\n    addFish = (fish) => {\n        //1. Take a copy of the existing state so as not to mutate existing state\n        const fishes = {...this.state.fishes};\n        //2. Add our new fishes to that fishes variable\n        fishes[`fish${Date.now()}`] = fish;\n        //3. Set the new fishes object to state\n        this.setState({fishes});\n    };\n    updateFish = (key, updatedFish) => {\n        //1.Take a copy of a current state\n        const fishes = { ...this.state.fishes };\n        //2. Update that state\n        fishes[key] = updatedFish;\n        //3. Set that to state\n        this.setState({fishes});\n    }\n    deleteFish = (key) => {\n        //1. Take a copy of state\n        const fishes = { ...this.state.fishes };\n        //2. update the state\n        fishes[key] = null;\n        //3. update the state\n        this.setState({fishes});\n    }\n    loadSampleFishes = () => {\n        this.setState({fishes: sampleFishes});\n    };\n    addToOrder = (key) => {\n        //1. Take a copy of state\n        const order = {...this.state.order};\n        //2. Either add to the order, or update the number in our order\n        order[key] = order[key] + 1 || 1;\n        //3. Call setState to update our state object\n        this.setState({order});\n    }\n    removeFromOrder = (key) => {\n        //1. Take a copy of state\n        const order = {...this.state.order};\n        //2. remove that item from order\n        delete order[key];\n        //3. Call setState to update our state object\n        this.setState({order});\n    }\n    render(){\n        return(\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header tagline=\"Fresh Seafood Market\"/>\n                    <ul className=\"fishes\">\n                        {Object.keys(this.state.fishes).map(key => (\n                            <Fish \n                                key={key} \n                                index={key}\n                                details={this.state.fishes[key]} \n                                addToOrder={this.addToOrder}\n                            />\n                        ))}\n                    </ul>\n                </div>\n                <Order \n                    fishes={this.state.fishes} \n                    order={this.state.order}\n                    removeFromOrder={this.removeFromOrder}\n                />\n                <Inventory \n                    addFish={this.addFish} \n                    updateFish={this.updateFish}\n                    deleteFish={this.deleteFish} \n                    loadSampleFishes={this.loadSampleFishes}\n                    fishes={this.state.fishes}\n                    storeId={this.props.match.params.storeId}\n                />\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\n\nconst NotFound = () => (\n    <div>\n        <h2>Not Found!!</h2>\n    </div>\n)\n\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from './NotFound';\n\nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route exact path =\"/\" component={StorePicker}/>\n            <Route path=\"/store/:storeId\" component={App} />\n            <Route component={NotFound} />\n        </Switch>\n    </BrowserRouter>\n)\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\n\nimport Router from './components/Router';\n\n\nimport './css/style.css';\n\nrender(<Router/>, document.querySelector('#main'));"],"sourceRoot":""}