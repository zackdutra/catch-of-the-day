{"ast":null,"code":"import _objectSpread from \"/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/src/components/App.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport Fish from './Fish';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport base from '../base';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      fishes: {},\n      order: {}\n    };\n\n    _this.addFish = function (fish) {\n      //1. Take a copy of the existing state so as not to mutate existing state\n      var fishes = _objectSpread({}, _this.state.fishes); //2. Add our new fishes to that fishes variable\n\n\n      fishes[\"fish\".concat(Date.now())] = fish; //3. Set the new fishes object to state\n\n      _this.setState({\n        fishes\n      });\n    };\n\n    _this.updateFish = function (key, updatedFish) {\n      //1.Take a copy of a current state\n      var fishes = _objectSpread({}, _this.state.fishes); //2. Update that state\n\n\n      fishes[key] = updatedFish; //3. Set that to state\n\n      _this.setState({\n        fishes\n      });\n    };\n\n    _this.deleteFish = function (key) {\n      //1. Take a copy of state\n      var fishes = _objectSpread({}, _this.state.fishes); //2. update the state\n\n\n      fishes[key] = null; //3. update the state\n\n      _this.setState({\n        fishes\n      });\n    };\n\n    _this.loadSampleFishes = function () {\n      _this.setState({\n        fishes: sampleFishes\n      });\n    };\n\n    _this.addToOrder = function (key) {\n      //1. Take a copy of state\n      var order = _objectSpread({}, _this.state.order); //2. Either add to the order, or update the number in our order\n\n\n      order[key] = order[key] + 1 || 1; //3. Call setState to update our state object\n\n      _this.setState({\n        order\n      });\n    };\n\n    _this.removeFromOrder = function (key) {\n      //1. Take a copy of state\n      var order = _objectSpread({}, _this.state.order); //2. remove that item from order\n\n\n      delete order[key]; //3. Call setState to update our state object\n\n      _this.setState({\n        order\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var params = this.props.match.params; // first reinstate our loclStorage\n\n      var localStorageRef = localStorage.getItem(params.storeId);\n\n      if (localStorageRef) {\n        this.setState({\n          order: JSON.parse(localStorageRef)\n        });\n      }\n\n      console.log(localStorageRef);\n      this.ref = base.syncState(\"\".concat(params.storeId, \"/fishes\"), {\n        context: this,\n        state: 'fishes'\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      base.removeBinding(this.ref);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"catch-of-the-day\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            tagline: \"Fresh Seafood Market\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"fishes\",\n            children: Object.keys(this.state.fishes).map(function (key) {\n              return /*#__PURE__*/_jsxDEV(Fish, {\n                index: key,\n                details: _this2.state.fishes[key],\n                addToOrder: _this2.addToOrder\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 29\n              }, _this2);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Order, {\n          fishes: this.state.fishes,\n          order: this.state.order,\n          removeFromOrder: this.removeFromOrder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Inventory, {\n          addFish: this.addFish,\n          updateFish: this.updateFish,\n          deleteFish: this.deleteFish,\n          loadSampleFishes: this.loadSampleFishes,\n          fishes: this.state.fishes,\n          storeId: this.props.match.params.storeId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nApp.propTypes = {\n  match: PropTypes.object\n};\nexport default App;","map":{"version":3,"sources":["/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/src/components/App.js"],"names":["React","PropTypes","Header","Order","Fish","Inventory","sampleFishes","base","App","state","fishes","order","addFish","fish","Date","now","setState","updateFish","key","updatedFish","deleteFish","loadSampleFishes","addToOrder","removeFromOrder","params","props","match","localStorageRef","localStorage","getItem","storeId","JSON","parse","console","log","ref","syncState","context","setItem","stringify","removeBinding","Object","keys","map","Component","propTypes","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport Fish from './Fish';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport base from '../base';\n\nclass App extends React.Component {\n    state = {\n        fishes: {},\n        order: {}\n    };\n\n    static propTypes = {\n        match: PropTypes.object\n    }\n\n    componentDidMount(){\n        const { params } = this.props.match;\n        // first reinstate our loclStorage\n        const localStorageRef = localStorage.getItem(params.storeId);\n        if(localStorageRef){\n            this.setState({ order: JSON.parse(localStorageRef) })\n        }\n        console.log(localStorageRef);\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\n            context: this,\n            state: 'fishes'\n        });\n    }\n    componentDidUpdate(){\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n    }\n    componentWillUnmount(){\n        base.removeBinding(this.ref);\n    }\n    addFish = (fish) => {\n        //1. Take a copy of the existing state so as not to mutate existing state\n        const fishes = {...this.state.fishes};\n        //2. Add our new fishes to that fishes variable\n        fishes[`fish${Date.now()}`] = fish;\n        //3. Set the new fishes object to state\n        this.setState({fishes});\n    };\n    updateFish = (key, updatedFish) => {\n        //1.Take a copy of a current state\n        const fishes = { ...this.state.fishes };\n        //2. Update that state\n        fishes[key] = updatedFish;\n        //3. Set that to state\n        this.setState({fishes});\n    }\n    deleteFish = (key) => {\n        //1. Take a copy of state\n        const fishes = { ...this.state.fishes };\n        //2. update the state\n        fishes[key] = null;\n        //3. update the state\n        this.setState({fishes});\n    }\n    loadSampleFishes = () => {\n        this.setState({fishes: sampleFishes});\n    };\n    addToOrder = (key) => {\n        //1. Take a copy of state\n        const order = {...this.state.order};\n        //2. Either add to the order, or update the number in our order\n        order[key] = order[key] + 1 || 1;\n        //3. Call setState to update our state object\n        this.setState({order});\n    }\n    removeFromOrder = (key) => {\n        //1. Take a copy of state\n        const order = {...this.state.order};\n        //2. remove that item from order\n        delete order[key];\n        //3. Call setState to update our state object\n        this.setState({order});\n    }\n    render(){\n        return(\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header tagline=\"Fresh Seafood Market\"/>\n                    <ul className=\"fishes\">\n                        {Object.keys(this.state.fishes).map(key => (\n                            <Fish \n                                key={key} \n                                index={key}\n                                details={this.state.fishes[key]} \n                                addToOrder={this.addToOrder}\n                            />\n                        ))}\n                    </ul>\n                </div>\n                <Order \n                    fishes={this.state.fishes} \n                    order={this.state.order}\n                    removeFromOrder={this.removeFromOrder}\n                />\n                <Inventory \n                    addFish={this.addFish} \n                    updateFish={this.updateFish}\n                    deleteFish={this.deleteFish} \n                    loadSampleFishes={this.loadSampleFishes}\n                    fishes={this.state.fishes}\n                    storeId={this.props.match.params.storeId}\n                />\n            </div>\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}