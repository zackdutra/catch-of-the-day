{"ast":null,"code":"import _classCallCheck from \"/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/src/components/Order.js\";\nimport React from 'react';\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Order = /*#__PURE__*/function (_React$Component) {\n  _inherits(Order, _React$Component);\n\n  var _super = _createSuper(Order);\n\n  function Order() {\n    var _this;\n\n    _classCallCheck(this, Order);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderOrder = function (key) {\n      var fish = _this.props.fishes[key];\n      var count = _this.props.order[key];\n      var isAvailable = fish && fish.status === 'available'; // Make sure the fish is loaded before we continue\n\n      if (!fish) return null;\n\n      if (!isAvailable) {\n        return /*#__PURE__*/_jsxDEV(CSSTransition, {\n          classNames: \"order\",\n          timeout: {\n            enter: 250,\n            exit: 250\n          },\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Sorry \", fish ? fish.name : 'fish', \" is no longer available.\"]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 21\n          }, _assertThisInitialized(_this))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, _assertThisInitialized(_this));\n      }\n\n      return /*#__PURE__*/_jsxDEV(CSSTransition, {\n        classNames: \"order\",\n        timeout: {\n          enter: 500,\n          exit: 500\n        },\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 21\n            }, _assertThisInitialized(_this)), \"lbs \", fish.name, formatPrice(count * fish.price), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: function onClick() {\n                return _this.props.removeFromOrder(key);\n              },\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 21\n            }, _assertThisInitialized(_this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, _assertThisInitialized(_this))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, _assertThisInitialized(_this))\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, _assertThisInitialized(_this));\n    };\n\n    return _this;\n  }\n\n  _createClass(Order, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var orderIds = Object.keys(this.props.order);\n      var total = orderIds.reduce(function (prevTotal, key) {\n        var fish = _this2.props.fishes[key];\n        var count = _this2.props.order[key];\n        var isAvailable = fish && fish.status === 'available';\n\n        if (isAvailable) {\n          return prevTotal + count * fish.price;\n        }\n\n        return prevTotal;\n      }, 0);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TransitionGroup, {\n          component: \"ul\",\n          className: \"order\",\n          children: orderIds.map(this.renderOrder)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"total\",\n          children: [\"Total:\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: formatPrice(total)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Order;\n}(React.Component);\n\nexport default Order;","map":{"version":3,"sources":["/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/src/components/Order.js"],"names":["React","formatPrice","TransitionGroup","CSSTransition","Order","renderOrder","key","fish","props","fishes","count","order","isAvailable","status","enter","exit","name","price","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,wBAA/C;;;IAEMC,K;;;;;;;;;;;;;;;;UACFC,W,GAAc,UAACC,GAAD,EAAS;AACnB,UAAMC,IAAI,GAAG,MAAKC,KAAL,CAAWC,MAAX,CAAkBH,GAAlB,CAAb;AACA,UAAMI,KAAK,GAAG,MAAKF,KAAL,CAAWG,KAAX,CAAiBL,GAAjB,CAAd;AACA,UAAMM,WAAW,GAAGL,IAAI,IAAIA,IAAI,CAACM,MAAL,KAAgB,WAA5C,CAHmB,CAInB;;AACA,UAAI,CAACN,IAAL,EAAW,OAAO,IAAP;;AACX,UAAI,CAACK,WAAL,EAAkB;AACd,4BACI,QAAC,aAAD;AACI,UAAA,UAAU,EAAC,OADf;AAGI,UAAA,OAAO,EAAE;AAAEE,YAAAA,KAAK,EAAC,GAAR;AAAaC,YAAAA,IAAI,EAAC;AAAlB,WAHb;AAAA,iCAKI;AAAA,iCACWR,IAAI,GAAGA,IAAI,CAACS,IAAR,GAAe,MAD9B;AAAA,aAASV,GAAT;AAAA;AAAA;AAAA;AAAA;AALJ,WAESA,GAFT;AAAA;AAAA;AAAA;AAAA,yCADJ;AAWH;;AACD,0BACA,QAAC,aAAD;AACI,QAAA,UAAU,EAAC,OADf;AAGI,QAAA,OAAO,EAAE;AAAEQ,UAAAA,KAAK,EAAC,GAAR;AAAaC,UAAAA,IAAI,EAAC;AAAlB,SAHb;AAAA,+BAKI;AAAA,iCACI;AAAA,oCACI;AAAA,wBAAOL;AAAP;AAAA;AAAA;AAAA;AAAA,6CADJ,UAESH,IAAI,CAACS,IAFd,EAGKf,WAAW,CAACS,KAAK,GAAGH,IAAI,CAACU,KAAd,CAHhB,eAII;AAAQ,cAAA,OAAO,EAAE;AAAA,uBAAM,MAAKT,KAAL,CAAWU,eAAX,CAA2BZ,GAA3B,CAAN;AAAA,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,WAASA,GAAT;AAAA;AAAA;AAAA;AAAA;AALJ,SAESA,GAFT;AAAA;AAAA;AAAA;AAAA,uCADA;AAgBH,K;;;;;;;WACD,kBAAS;AAAA;;AACL,UAAMa,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKb,KAAL,CAAWG,KAAvB,CAAjB;AACA,UAAMW,KAAK,GAAGH,QAAQ,CAACI,MAAT,CAAgB,UAACC,SAAD,EAAYlB,GAAZ,EAAoB;AAC9C,YAAMC,IAAI,GAAG,MAAI,CAACC,KAAL,CAAWC,MAAX,CAAkBH,GAAlB,CAAb;AACA,YAAMI,KAAK,GAAG,MAAI,CAACF,KAAL,CAAWG,KAAX,CAAiBL,GAAjB,CAAd;AACA,YAAMM,WAAW,GAAGL,IAAI,IAAIA,IAAI,CAACM,MAAL,KAAgB,WAA5C;;AACA,YAAGD,WAAH,EAAgB;AACZ,iBAAOY,SAAS,GAAId,KAAK,GAAGH,IAAI,CAACU,KAAjC;AACH;;AACD,eAAOO,SAAP;AACH,OARa,EAQX,CARW,CAAd;AASA,0BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,eAAD;AAAiB,UAAA,SAAS,EAAC,IAA3B;AAAgC,UAAA,SAAS,EAAC,OAA1C;AAAA,oBACKL,QAAQ,CAACM,GAAT,CAAa,KAAKpB,WAAlB;AADL;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,4CAEI;AAAA,sBAASJ,WAAW,CAACqB,KAAD;AAApB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAaH;;;;EA7DetB,KAAK,CAAC0B,S;;AAgE1B,eAAetB,KAAf","sourcesContent":["import React from 'react';\nimport { formatPrice } from '../helpers'\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\"\n\nclass Order extends React.Component { \n    renderOrder = (key) => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvailable = fish && fish.status === 'available';\n        // Make sure the fish is loaded before we continue\n        if (!fish) return null;\n        if (!isAvailable) {\n            return (\n                <CSSTransition \n                    classNames=\"order\" \n                    key={key} \n                    timeout={{ enter:250, exit:250 }}\n                >\n                    <li key={key}>\n                        Sorry {fish ? fish.name : 'fish'} is no longer available.\n                    </li>\n                </CSSTransition>\n            );\n        }\n        return (\n        <CSSTransition \n            classNames=\"order\" \n            key={key} \n            timeout={{ enter:500, exit:500 }}\n        >\n            <li key={key}>\n                <span>\n                    <span>{count}</span>\n                    lbs {fish.name}\n                    {formatPrice(count * fish.price)}\n                    <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\n                </span>\n            </li>\n        </CSSTransition>\n        );\n    };\n    render() {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) => {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status === 'available';\n            if(isAvailable) {\n                return prevTotal + (count * fish.price);\n            }\n            return prevTotal;\n        }, 0);\n        return (\n            <div className=\"order-wrap\">\n                <h2>Order</h2>\n                <TransitionGroup component=\"ul\" className='order'>\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                <div className=\"total\">\n                    Total:\n                    <strong>{formatPrice(total)}</strong>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default Order;"]},"metadata":{},"sourceType":"module"}