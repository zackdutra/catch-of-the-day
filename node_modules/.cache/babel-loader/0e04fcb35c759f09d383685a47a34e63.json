{"ast":null,"code":"import _objectSpread from\"/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import Header from'./Header';import Order from'./Order';import Fish from'./Fish';import Inventory from'./Inventory';import sampleFishes from'../sample-fishes';import base from'../base';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={fishes:{},order:{}};_this.addFish=function(fish){//1. Take a copy of the existing state so as not to mutate existing state\nvar fishes=_objectSpread({},_this.state.fishes);//2. Add our new fishes to that fishes variable\nfishes[\"fish\".concat(Date.now())]=fish;//3. Set the new fishes object to state\n_this.setState({fishes});};_this.updateFish=function(key,updatedFish){//1.Take a copy of a current state\nvar fishes=_objectSpread({},_this.state.fishes);//2. Update that state\nfishes[key]=updatedFish;//3. Set that to state\n_this.setState({fishes});};_this.deleteFish=function(key){//1. Take a copy of state\nvar fishes=_objectSpread({},_this.state.fishes);//2. update the state\nfishes[key]=null;//3. update the state\n_this.setState({fishes});};_this.loadSampleFishes=function(){_this.setState({fishes:sampleFishes});};_this.addToOrder=function(key){//1. Take a copy of state\nvar order=_objectSpread({},_this.state.order);//2. Either add to the order, or update the number in our order\norder[key]=order[key]+1||1;//3. Call setState to update our state object\n_this.setState({order});};_this.removeFromOrder=function(key){//1. Take a copy of state\nvar order=_objectSpread({},_this.state.order);//2. remove that item from order\ndelete order[key];//3. Call setState to update our state object\n_this.setState({order});};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var params=this.props.match.params;// first reinstate our loclStorage\nvar localStorageRef=localStorage.getItem(params.storeId);if(localStorageRef){this.setState({order:JSON.parse(localStorageRef)});}console.log(localStorageRef);this.ref=base.syncState(\"\".concat(params.storeId,\"/fishes\"),{context:this,state:'fishes'});}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){localStorage.setItem(this.props.match.params.storeId,JSON.stringify(this.state.order));}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){base.removeBinding(this.ref);}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsxs(\"div\",{className:\"catch-of-the-day\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"menu\",children:[/*#__PURE__*/_jsx(Header,{tagline:\"Fresh Seafood Market\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"fishes\",children:Object.keys(this.state.fishes).map(function(key){return/*#__PURE__*/_jsx(Fish,{index:key,details:_this2.state.fishes[key],addToOrder:_this2.addToOrder},key);})})]}),/*#__PURE__*/_jsx(Order,{fishes:this.state.fishes,order:this.state.order,removeFromOrder:this.removeFromOrder}),/*#__PURE__*/_jsx(Inventory,{addFish:this.addFish,updateFish:this.updateFish,deleteFish:this.deleteFish,loadSampleFishes:this.loadSampleFishes,fishes:this.state.fishes,storeId:this.props.match.params.storeId})]});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/src/components/App.js"],"names":["React","Header","Order","Fish","Inventory","sampleFishes","base","App","state","fishes","order","addFish","fish","Date","now","setState","updateFish","key","updatedFish","deleteFish","loadSampleFishes","addToOrder","removeFromOrder","params","props","match","localStorageRef","localStorage","getItem","storeId","JSON","parse","console","log","ref","syncState","context","setItem","stringify","removeBinding","Object","keys","map","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport Fish from './Fish';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport base from '../base';\n\nclass App extends React.Component {\n    state = {\n        fishes: {},\n        order: {}\n    };\n\n    static propTypes = {\n        match: PropTypes.object\n    }\n\n    componentDidMount(){\n        const { params } = this.props.match;\n        // first reinstate our loclStorage\n        const localStorageRef = localStorage.getItem(params.storeId);\n        if(localStorageRef){\n            this.setState({ order: JSON.parse(localStorageRef) })\n        }\n        console.log(localStorageRef);\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\n            context: this,\n            state: 'fishes'\n        });\n    }\n    componentDidUpdate(){\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n    }\n    componentWillUnmount(){\n        base.removeBinding(this.ref);\n    }\n    addFish = (fish) => {\n        //1. Take a copy of the existing state so as not to mutate existing state\n        const fishes = {...this.state.fishes};\n        //2. Add our new fishes to that fishes variable\n        fishes[`fish${Date.now()}`] = fish;\n        //3. Set the new fishes object to state\n        this.setState({fishes});\n    };\n    updateFish = (key, updatedFish) => {\n        //1.Take a copy of a current state\n        const fishes = { ...this.state.fishes };\n        //2. Update that state\n        fishes[key] = updatedFish;\n        //3. Set that to state\n        this.setState({fishes});\n    }\n    deleteFish = (key) => {\n        //1. Take a copy of state\n        const fishes = { ...this.state.fishes };\n        //2. update the state\n        fishes[key] = null;\n        //3. update the state\n        this.setState({fishes});\n    }\n    loadSampleFishes = () => {\n        this.setState({fishes: sampleFishes});\n    };\n    addToOrder = (key) => {\n        //1. Take a copy of state\n        const order = {...this.state.order};\n        //2. Either add to the order, or update the number in our order\n        order[key] = order[key] + 1 || 1;\n        //3. Call setState to update our state object\n        this.setState({order});\n    }\n    removeFromOrder = (key) => {\n        //1. Take a copy of state\n        const order = {...this.state.order};\n        //2. remove that item from order\n        delete order[key];\n        //3. Call setState to update our state object\n        this.setState({order});\n    }\n    render(){\n        return(\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header tagline=\"Fresh Seafood Market\"/>\n                    <ul className=\"fishes\">\n                        {Object.keys(this.state.fishes).map(key => (\n                            <Fish \n                                key={key} \n                                index={key}\n                                details={this.state.fishes[key]} \n                                addToOrder={this.addToOrder}\n                            />\n                        ))}\n                    </ul>\n                </div>\n                <Order \n                    fishes={this.state.fishes} \n                    order={this.state.order}\n                    removeFromOrder={this.removeFromOrder}\n                />\n                <Inventory \n                    addFish={this.addFish} \n                    updateFish={this.updateFish}\n                    deleteFish={this.deleteFish} \n                    loadSampleFishes={this.loadSampleFishes}\n                    fishes={this.state.fishes}\n                    storeId={this.props.match.params.storeId}\n                />\n            </div>\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}