{"ast":null,"code":"import _regeneratorRuntime from \"/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/src/components/Inventory.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Inventory = /*#__PURE__*/function (_React$Component) {\n  _inherits(Inventory, _React$Component);\n\n  var _super = _createSuper(Inventory);\n\n  function Inventory() {\n    var _this;\n\n    _classCallCheck(this, Inventory);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.authHandler = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(authData) {\n        var store;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return base.fetch(_this.props.storeId, {\n                  context: _assertThisInitialized(_this)\n                });\n\n              case 2:\n                store = _context.sent;\n                console.log(store); //2 Claim it if there is no owner\n\n                if (store.owner) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 7;\n                return base.post(\"\".concat(_this.props.storeId, \"/owner\"), {\n                  data: authData.user.uid\n                });\n\n              case 7:\n                //3. Set the state of the inventory component to reflect the current user \n                _this.setState({\n                  uid: authData.user.uid,\n                  owner: store.owner || authData.user.uid\n                });\n\n                console.log(authData);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.authenticate = function (provider) {\n      var authProvider = new firebase.auth[\"\".concat(provider, \"AuthProvider\")]();\n      firebaseApp.auth().signInWithPopup(authProvider).then(_this.authHandler);\n    };\n\n    return _this;\n  }\n\n  _createClass(Inventory, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(Login, {\n        authenticate: this.authenticate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }, this);\n      /* return (\n          <div className=\"inventory\">\n              <h2>Inventory</h2>\n              {Object.keys(this.props.fishes).map(key => \n                  <EditFishForm \n                      key={key} \n                      index={key}\n                      fish={this.props.fishes[key]}\n                      updateFish={this.props.updateFish}\n                      deleteFish={this.props.deleteFish}\n                  />\n              )}\n              <AddFishForm addFish={this.props.addFish}/>\n              <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n          </div>\n      ); */\n    }\n  }]);\n\n  return Inventory;\n}(React.Component);\n\nInventory.propTypes = {\n  fishes: PropTypes.object,\n  updateFish: PropTypes.func,\n  deleteFish: PropTypes.func,\n  loadSampleFishes: PropTypes.func\n};\nexport default Inventory;","map":{"version":3,"sources":["/Volumes/GoogleDrive/My Drive/zack-code/React-For-Beginners-Starter-Files-master/catch-of-the-day/src/components/Inventory.js"],"names":["React","PropTypes","firebase","AddFishForm","EditFishForm","Login","base","firebaseApp","Inventory","authHandler","authData","fetch","props","storeId","context","store","console","log","owner","post","data","user","uid","setState","authenticate","provider","authProvider","auth","signInWithPopup","then","Component","propTypes","fishes","object","updateFish","func","deleteFish","loadSampleFishes"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,IAAeC,WAAf,QAAkC,SAAlC;;;IAEMC,S;;;;;;;;;;;;;;;;UAQFC,W;0EAAc,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEUJ,IAAI,CAACK,KAAL,CAAW,MAAKC,KAAL,CAAWC,OAAtB,EAA+B;AAAEC,kBAAAA,OAAO;AAAT,iBAA/B,CAFV;;AAAA;AAEJC,gBAAAA,KAFI;AAGVC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAHU,CAIV;;AAJU,oBAKNA,KAAK,CAACG,KALA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAOAZ,IAAI,CAACa,IAAL,WAAa,MAAKP,KAAL,CAAWC,OAAxB,aAAyC;AAC3CO,kBAAAA,IAAI,EAAEV,QAAQ,CAACW,IAAT,CAAcC;AADuB,iBAAzC,CAPA;;AAAA;AAWV;AACA,sBAAKC,QAAL,CAAc;AACVD,kBAAAA,GAAG,EAAEZ,QAAQ,CAACW,IAAT,CAAcC,GADT;AAEVJ,kBAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,IAAeR,QAAQ,CAACW,IAAT,CAAcC;AAF1B,iBAAd;;AAIAN,gBAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;;AAhBU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;UAmBdc,Y,GAAe,UAACC,QAAD,EAAc;AACzB,UAAMC,YAAY,GAAG,IAAIxB,QAAQ,CAACyB,IAAT,WAAiBF,QAAjB,kBAAJ,EAArB;AACAlB,MAAAA,WAAW,CACNoB,IADL,GAEKC,eAFL,CAEqBF,YAFrB,EAGKG,IAHL,CAGU,MAAKpB,WAHf;AAIH,K;;;;;;;WAED,kBAAS;AACL,0BAAO,QAAC,KAAD;AAAO,QAAA,YAAY,EAAE,KAAKe;AAA1B;AAAA;AAAA;AAAA;AAAA,cAAP;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACK;;;;EArDmBxB,KAAK,CAAC8B,S;;AAAxBtB,S,CACKuB,S,GAAY;AACfC,EAAAA,MAAM,EAAE/B,SAAS,CAACgC,MADH;AAEfC,EAAAA,UAAU,EAAEjC,SAAS,CAACkC,IAFP;AAGfC,EAAAA,UAAU,EAAEnC,SAAS,CAACkC,IAHP;AAIfE,EAAAA,gBAAgB,EAAEpC,SAAS,CAACkC;AAJb,C;AAuDvB,eAAe3B,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends React.Component { \n    static propTypes = {\n        fishes: PropTypes.object,\n        updateFish: PropTypes.func,\n        deleteFish: PropTypes.func,\n        loadSampleFishes: PropTypes.func\n    };\n\n    authHandler = async authData => {\n        //1. Look up the current store in the firebase database\n        const store = await base.fetch(this.props.storeId, { context: this });\n        console.log(store);\n        //2 Claim it if there is no owner\n        if(!store.owner){\n            //save it as our own\n            await base.post(`${this.props.storeId}/owner`, {\n                data: authData.user.uid\n            })\n        }\n        //3. Set the state of the inventory component to reflect the current user \n        this.setState({\n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        })\n        console.log(authData);\n    }\n\n    authenticate = (provider) => {\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp\n            .auth()\n            .signInWithPopup(authProvider)\n            .then(this.authHandler);\n    }\n\n    render() {\n        return <Login authenticate={this.authenticate} />;\n        /* return (\n            <div className=\"inventory\">\n                <h2>Inventory</h2>\n                {Object.keys(this.props.fishes).map(key => \n                    <EditFishForm \n                        key={key} \n                        index={key}\n                        fish={this.props.fishes[key]}\n                        updateFish={this.props.updateFish}\n                        deleteFish={this.props.deleteFish}\n                    />\n                )}\n                <AddFishForm addFish={this.props.addFish}/>\n                <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n            </div>\n        ); */\n    }\n}\n\nexport default Inventory;"]},"metadata":{},"sourceType":"module"}